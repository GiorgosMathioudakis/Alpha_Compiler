Terminals unused in grammar

    ERROR
    PUREIF


State 102 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: statements

    2 statements: statements stmt
    3           | ε

    4 stmt: expr SEMICOLON
    5     | ifstmt
    6     | returnstmt
    7     | forstmt
    8     | whilestmt
    9     | break
   10     | continue
   11     | block
   12     | funcdef
   13     | SEMICOLON

   14 expr: term
   15     | expr PLUS expr
   16     | expr MINUS expr
   17     | expr MULTIPLY expr
   18     | expr DIVIDE expr
   19     | expr MODULUS expr
   20     | expr LESS_THAN expr
   21     | expr GREATER_THAN expr
   22     | expr LESS_THAN_OR_EQUAL expr
   23     | expr GREATER_THAN_OR_EQUAL expr
   24     | expr EQUAL expr
   25     | expr NOT_EQUAL expr
   26     | expr AND expr
   27     | expr OR expr
   28     | assignexpr

   29 assignexpr: lvalue ASSIGNMENT expr

   30 term: LEFT_PARENTHESIS expr RIGHT_PARENTHESIS
   31     | MINUS expr
   32     | NOT expr
   33     | primary
   34     | INCREMENT lvalue
   35     | lvalue INCREMENT
   36     | DECREMENT lvalue
   37     | lvalue DECREMENT

   38 $@1: ε

   39 block: LEFT_CURLY_BRACKET $@1 statements RIGHT_CURLY_BRACKET

   40 funcname: ID
   41         | ε

   42 $@2: ε

   43 funcprefix: FUNCTION $@2 funcname

   44 funcargs: LEFT_PARENTHESIS idlist RIGHT_PARENTHESIS

   45 funcbody: block

   46 funcdef: funcprefix funcargs funcbody

   47 $@3: ε

   48 idlist: ID $@3 nextID
   49       | ε

   50 $@4: ε

   51 nextID: COMMA ID $@4 nextID
   52       | ε

   53 primary: call
   54        | objectdef
   55        | LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS
   56        | const
   57        | lvalue

   58 lvalue: ID
   59       | LOCAL ID
   60       | DOUBLE_COLON ID
   61       | member

   62 member: lvalue PERIOD ID
   63       | lvalue LEFT_BRACKET expr RIGHT_BRACKET
   64       | call PERIOD ID
   65       | call LEFT_BRACKET expr RIGHT_BRACKET

   66 objectdef: LEFT_BRACKET elist RIGHT_BRACKET
   67          | LEFT_BRACKET indexed RIGHT_BRACKET

   68 indexed: indexedelem nextindexelem

   69 nextindexelem: COMMA indexedelem nextindexelem
   70              | ε

   71 indexedelem: LEFT_CURLY_BRACKET expr COLON expr RIGHT_CURLY_BRACKET

   72 elist: expr next
   73      | ε

   74 next: COMMA expr next
   75     | ε

   76 const: INTEGER
   77      | REAL
   78      | STRING
   79      | NIL
   80      | TRUE
   81      | FALSE

   82 call: call LEFT_PARENTHESIS elist RIGHT_PARENTHESIS
   83     | lvalue callsufix
   84     | LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

   85 callsufix: normcall
   86          | methodcall

   87 normcall: LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

   88 methodcall: DOUBLE_PERIOD ID LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

   89 ifprefix: IF LEFT_PARENTHESIS expr RIGHT_PARENTHESIS

   90 elseprefix: ELSE

   91 ifstmt: ifprefix stmt
   92       | ifprefix stmt elseprefix stmt

   93 returnstmt: RETURN SEMICOLON
   94           | RETURN expr SEMICOLON

   95 N: ε

   96 M: ε

   97 $@5: ε

   98 forprefix: FOR $@5 LEFT_PARENTHESIS elist SEMICOLON M expr SEMICOLON

   99 forstmt: forprefix N elist RIGHT_PARENTHESIS N loopstmt N

  100 whilestart: WHILE

  101 whilecond: LEFT_PARENTHESIS expr RIGHT_PARENTHESIS

  102 whilestmt: whilestart whilecond loopstmt

  103 loopstart: ε

  104 loopend: ε

  105 loopstmt: loopstart stmt loopend

  106 break: BREAK SEMICOLON

  107 continue: CONTINUE SEMICOLON


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    IF <string> (258) 89
    ELSE <string> (259) 90
    WHILE <string> (260) 100
    FOR <string> (261) 98
    FUNCTION <string> (262) 43
    RETURN <string> (263) 93 94
    BREAK <string> (264) 106
    CONTINUE <string> (265) 107
    AND <string> (266) 26
    NOT <string> (267) 32
    OR <string> (268) 27
    LOCAL <string> (269) 59
    TRUE <string> (270) 80
    FALSE <string> (271) 81
    NIL <string> (272) 79
    ASSIGNMENT <string> (273) 29
    PLUS <string> (274) 15
    MINUS <string> (275) 16 31
    MULTIPLY <string> (276) 17
    DIVIDE <string> (277) 18
    MODULUS <string> (278) 19
    INCREMENT <string> (279) 34 35
    DECREMENT <string> (280) 36 37
    LESS_THAN <string> (281) 20
    GREATER_THAN <string> (282) 21
    LESS_THAN_OR_EQUAL <string> (283) 22
    GREATER_THAN_OR_EQUAL <string> (284) 23
    EQUAL <string> (285) 24
    NOT_EQUAL <string> (286) 25
    LEFT_CURLY_BRACKET <string> (287) 39 71
    RIGHT_CURLY_BRACKET <string> (288) 39 71
    PERIOD <string> (289) 62 64
    COMMA <string> (290) 51 69 74
    COLON <string> (291) 71
    SEMICOLON <string> (292) 4 13 93 94 98 106 107
    RIGHT_BRACKET <string> (293) 63 65 66 67
    LEFT_BRACKET <string> (294) 63 65 66 67
    RIGHT_PARENTHESIS <string> (295) 30 44 55 82 84 87 88 89 99 101
    LEFT_PARENTHESIS <string> (296) 30 44 55 82 84 87 88 89 98 101
    DOUBLE_COLON <string> (297) 60
    DOUBLE_PERIOD <string> (298) 88
    ID <string> (299) 40 48 51 58 59 60 62 64 88
    INTEGER <integer> (300) 76
    STRING <string> (301) 78
    REAL <real> (302) 77
    ERROR <string> (303)
    UMINUS (304)
    PUREIF (305)


Nonterminals, with rules where they appear

    $accept (51)
        on left: 0
    program (52)
        on left: 1
        on right: 0
    statements <s> (53)
        on left: 2 3
        on right: 1 2 39
    stmt <s> (54)
        on left: 4 5 6 7 8 9 10 11 12 13
        on right: 2 91 92 105
    expr <expression> (55)
        on left: 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28
        on right: 4 15 16 17 18 19 20 21 22 23 24 25 26 27 29 30 31 32 63 65 71 72 74 89 94 98 101
    assignexpr <expression> (56)
        on left: 29
        on right: 28
    term <expression> (57)
        on left: 30 31 32 33 34 35 36 37
        on right: 14
    block <s> (58)
        on left: 39
        on right: 11 45
    $@1 (59)
        on left: 38
        on right: 39
    funcname <string> (60)
        on left: 40 41
        on right: 43
    funcprefix <symbol> (61)
        on left: 43
        on right: 46
    $@2 (62)
        on left: 42
        on right: 43
    funcargs (63)
        on left: 44
        on right: 46
    funcbody <quad69> (64)
        on left: 45
        on right: 46
    funcdef <symbol> (65)
        on left: 46
        on right: 12 55 84
    idlist (66)
        on left: 48 49
        on right: 44
    $@3 (67)
        on left: 47
        on right: 48
    nextID (68)
        on left: 51 52
        on right: 48 51
    $@4 (69)
        on left: 50
        on right: 51
    primary <expression> (70)
        on left: 53 54 55 56 57
        on right: 33
    lvalue <expression> (71)
        on left: 58 59 60 61
        on right: 29 34 35 36 37 57 62 63 83
    member <expression> (72)
        on left: 62 63 64 65
        on right: 61
    objectdef <expression> (73)
        on left: 66 67
        on right: 54
    indexed <expression> (74)
        on left: 68
        on right: 67
    nextindexelem <expression> (75)
        on left: 69 70
        on right: 68 69
    indexedelem <expression> (76)
        on left: 71
        on right: 68 69
    elist <expression> (77)
        on left: 72 73
        on right: 66 82 84 87 88 98 99
    next <expression> (78)
        on left: 74 75
        on right: 72 74
    const <expression> (79)
        on left: 76 77 78 79 80 81
        on right: 56
    call <expression> (80)
        on left: 82 83 84
        on right: 53 64 65 82
    callsufix <call> (81)
        on left: 85 86
        on right: 83
    normcall <call> (82)
        on left: 87
        on right: 85
    methodcall <call> (83)
        on left: 88
        on right: 86
    ifprefix <quad69> (84)
        on left: 89
        on right: 91 92
    elseprefix <quad69> (85)
        on left: 90
        on right: 92
    ifstmt <s> (86)
        on left: 91 92
        on right: 5
    returnstmt <expression> (87)
        on left: 93 94
        on right: 6
    N <quad69> (88)
        on left: 95
        on right: 99
    M <quad69> (89)
        on left: 96
        on right: 98
    forprefix <f> (90)
        on left: 98
        on right: 99
    $@5 (91)
        on left: 97
        on right: 98
    forstmt (92)
        on left: 99
        on right: 7
    whilestart <quad69> (93)
        on left: 100
        on right: 102
    whilecond <quad69> (94)
        on left: 101
        on right: 102
    whilestmt (95)
        on left: 102
        on right: 8
    loopstart (96)
        on left: 103
        on right: 105
    loopend (97)
        on left: 104
        on right: 105
    loopstmt <s> (98)
        on left: 105
        on right: 99 102
    break <s> (99)
        on left: 106
        on right: 9
    continue <s> (100)
        on left: 107
        on right: 10


State 0

    0 $accept: • program $end

    $default  reduce using rule 3 (statements)

    program     go to state 1
    statements  go to state 2


State 1

    0 $accept: program • $end

    $end  shift, and go to state 3


State 2

    1 program: statements •
    2 statements: statements • stmt

    IF                  shift, and go to state 4
    WHILE               shift, and go to state 5
    FOR                 shift, and go to state 6
    FUNCTION            shift, and go to state 7
    RETURN              shift, and go to state 8
    BREAK               shift, and go to state 9
    CONTINUE            shift, and go to state 10
    NOT                 shift, and go to state 11
    LOCAL               shift, and go to state 12
    TRUE                shift, and go to state 13
    FALSE               shift, and go to state 14
    NIL                 shift, and go to state 15
    MINUS               shift, and go to state 16
    INCREMENT           shift, and go to state 17
    DECREMENT           shift, and go to state 18
    LEFT_CURLY_BRACKET  shift, and go to state 19
    SEMICOLON           shift, and go to state 20
    LEFT_BRACKET        shift, and go to state 21
    LEFT_PARENTHESIS    shift, and go to state 22
    DOUBLE_COLON        shift, and go to state 23
    ID                  shift, and go to state 24
    INTEGER             shift, and go to state 25
    STRING              shift, and go to state 26
    REAL                shift, and go to state 27

    $default  reduce using rule 1 (program)

    stmt        go to state 28
    expr        go to state 29
    assignexpr  go to state 30
    term        go to state 31
    block       go to state 32
    funcprefix  go to state 33
    funcdef     go to state 34
    primary     go to state 35
    lvalue      go to state 36
    member      go to state 37
    objectdef   go to state 38
    const       go to state 39
    call        go to state 40
    ifprefix    go to state 41
    ifstmt      go to state 42
    returnstmt  go to state 43
    forprefix   go to state 44
    forstmt     go to state 45
    whilestart  go to state 46
    whilestmt   go to state 47
    break       go to state 48
    continue    go to state 49


State 3

    0 $accept: program $end •

    $default  accept


State 4

   89 ifprefix: IF • LEFT_PARENTHESIS expr RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 50


State 5

  100 whilestart: WHILE •

    $default  reduce using rule 100 (whilestart)


State 6

   98 forprefix: FOR • $@5 LEFT_PARENTHESIS elist SEMICOLON M expr SEMICOLON

    $default  reduce using rule 97 ($@5)

    $@5  go to state 51


State 7

   43 funcprefix: FUNCTION • $@2 funcname

    $default  reduce using rule 42 ($@2)

    $@2  go to state 52


State 8

   93 returnstmt: RETURN • SEMICOLON
   94           | RETURN • expr SEMICOLON

    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    MINUS             shift, and go to state 16
    INCREMENT         shift, and go to state 17
    DECREMENT         shift, and go to state 18
    SEMICOLON         shift, and go to state 53
    LEFT_BRACKET      shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 23
    ID                shift, and go to state 24
    INTEGER           shift, and go to state 25
    STRING            shift, and go to state 26
    REAL              shift, and go to state 27

    expr        go to state 54
    assignexpr  go to state 30
    term        go to state 31
    primary     go to state 35
    lvalue      go to state 36
    member      go to state 37
    objectdef   go to state 38
    const       go to state 39
    call        go to state 40


State 9

  106 break: BREAK • SEMICOLON

    SEMICOLON  shift, and go to state 55


State 10

  107 continue: CONTINUE • SEMICOLON

    SEMICOLON  shift, and go to state 56


State 11

   32 term: NOT • expr

    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    MINUS             shift, and go to state 16
    INCREMENT         shift, and go to state 17
    DECREMENT         shift, and go to state 18
    LEFT_BRACKET      shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 23
    ID                shift, and go to state 24
    INTEGER           shift, and go to state 25
    STRING            shift, and go to state 26
    REAL              shift, and go to state 27

    expr        go to state 57
    assignexpr  go to state 30
    term        go to state 31
    primary     go to state 35
    lvalue      go to state 36
    member      go to state 37
    objectdef   go to state 38
    const       go to state 39
    call        go to state 40


State 12

   59 lvalue: LOCAL • ID

    ID  shift, and go to state 58


State 13

   80 const: TRUE •

    $default  reduce using rule 80 (const)


State 14

   81 const: FALSE •

    $default  reduce using rule 81 (const)


State 15

   79 const: NIL •

    $default  reduce using rule 79 (const)


State 16

   31 term: MINUS • expr

    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    MINUS             shift, and go to state 16
    INCREMENT         shift, and go to state 17
    DECREMENT         shift, and go to state 18
    LEFT_BRACKET      shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 23
    ID                shift, and go to state 24
    INTEGER           shift, and go to state 25
    STRING            shift, and go to state 26
    REAL              shift, and go to state 27

    expr        go to state 59
    assignexpr  go to state 30
    term        go to state 31
    primary     go to state 35
    lvalue      go to state 36
    member      go to state 37
    objectdef   go to state 38
    const       go to state 39
    call        go to state 40


State 17

   34 term: INCREMENT • lvalue

    LOCAL             shift, and go to state 12
    LEFT_PARENTHESIS  shift, and go to state 60
    DOUBLE_COLON      shift, and go to state 23
    ID                shift, and go to state 24

    lvalue  go to state 61
    member  go to state 37
    call    go to state 62


State 18

   36 term: DECREMENT • lvalue

    LOCAL             shift, and go to state 12
    LEFT_PARENTHESIS  shift, and go to state 60
    DOUBLE_COLON      shift, and go to state 23
    ID                shift, and go to state 24

    lvalue  go to state 63
    member  go to state 37
    call    go to state 62


State 19

   39 block: LEFT_CURLY_BRACKET • $@1 statements RIGHT_CURLY_BRACKET

    $default  reduce using rule 38 ($@1)

    $@1  go to state 64


State 20

   13 stmt: SEMICOLON •

    $default  reduce using rule 13 (stmt)


State 21

   66 objectdef: LEFT_BRACKET • elist RIGHT_BRACKET
   67          | LEFT_BRACKET • indexed RIGHT_BRACKET

    NOT                 shift, and go to state 11
    LOCAL               shift, and go to state 12
    TRUE                shift, and go to state 13
    FALSE               shift, and go to state 14
    NIL                 shift, and go to state 15
    MINUS               shift, and go to state 16
    INCREMENT           shift, and go to state 17
    DECREMENT           shift, and go to state 18
    LEFT_CURLY_BRACKET  shift, and go to state 65
    LEFT_BRACKET        shift, and go to state 21
    LEFT_PARENTHESIS    shift, and go to state 22
    DOUBLE_COLON        shift, and go to state 23
    ID                  shift, and go to state 24
    INTEGER             shift, and go to state 25
    STRING              shift, and go to state 26
    REAL                shift, and go to state 27

    $default  reduce using rule 73 (elist)

    expr         go to state 66
    assignexpr   go to state 30
    term         go to state 31
    primary      go to state 35
    lvalue       go to state 36
    member       go to state 37
    objectdef    go to state 38
    indexed      go to state 67
    indexedelem  go to state 68
    elist        go to state 69
    const        go to state 39
    call         go to state 40


State 22

   30 term: LEFT_PARENTHESIS • expr RIGHT_PARENTHESIS
   55 primary: LEFT_PARENTHESIS • funcdef RIGHT_PARENTHESIS
   84 call: LEFT_PARENTHESIS • funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    FUNCTION          shift, and go to state 7
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    MINUS             shift, and go to state 16
    INCREMENT         shift, and go to state 17
    DECREMENT         shift, and go to state 18
    LEFT_BRACKET      shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 23
    ID                shift, and go to state 24
    INTEGER           shift, and go to state 25
    STRING            shift, and go to state 26
    REAL              shift, and go to state 27

    expr        go to state 70
    assignexpr  go to state 30
    term        go to state 31
    funcprefix  go to state 33
    funcdef     go to state 71
    primary     go to state 35
    lvalue      go to state 36
    member      go to state 37
    objectdef   go to state 38
    const       go to state 39
    call        go to state 40


State 23

   60 lvalue: DOUBLE_COLON • ID

    ID  shift, and go to state 72


State 24

   58 lvalue: ID •

    $default  reduce using rule 58 (lvalue)


State 25

   76 const: INTEGER •

    $default  reduce using rule 76 (const)


State 26

   78 const: STRING •

    $default  reduce using rule 78 (const)


State 27

   77 const: REAL •

    $default  reduce using rule 77 (const)


State 28

    2 statements: statements stmt •

    $default  reduce using rule 2 (statements)


State 29

    4 stmt: expr • SEMICOLON
   15 expr: expr • PLUS expr
   16     | expr • MINUS expr
   17     | expr • MULTIPLY expr
   18     | expr • DIVIDE expr
   19     | expr • MODULUS expr
   20     | expr • LESS_THAN expr
   21     | expr • GREATER_THAN expr
   22     | expr • LESS_THAN_OR_EQUAL expr
   23     | expr • GREATER_THAN_OR_EQUAL expr
   24     | expr • EQUAL expr
   25     | expr • NOT_EQUAL expr
   26     | expr • AND expr
   27     | expr • OR expr

    AND                    shift, and go to state 73
    OR                     shift, and go to state 74
    PLUS                   shift, and go to state 75
    MINUS                  shift, and go to state 76
    MULTIPLY               shift, and go to state 77
    DIVIDE                 shift, and go to state 78
    MODULUS                shift, and go to state 79
    LESS_THAN              shift, and go to state 80
    GREATER_THAN           shift, and go to state 81
    LESS_THAN_OR_EQUAL     shift, and go to state 82
    GREATER_THAN_OR_EQUAL  shift, and go to state 83
    EQUAL                  shift, and go to state 84
    NOT_EQUAL              shift, and go to state 85
    SEMICOLON              shift, and go to state 86


State 30

   28 expr: assignexpr •

    $default  reduce using rule 28 (expr)


State 31

   14 expr: term •

    $default  reduce using rule 14 (expr)


State 32

   11 stmt: block •

    $default  reduce using rule 11 (stmt)


State 33

   46 funcdef: funcprefix • funcargs funcbody

    LEFT_PARENTHESIS  shift, and go to state 87

    funcargs  go to state 88


State 34

   12 stmt: funcdef •

    $default  reduce using rule 12 (stmt)


State 35

   33 term: primary •

    $default  reduce using rule 33 (term)


State 36

   29 assignexpr: lvalue • ASSIGNMENT expr
   35 term: lvalue • INCREMENT
   37     | lvalue • DECREMENT
   57 primary: lvalue •
   62 member: lvalue • PERIOD ID
   63       | lvalue • LEFT_BRACKET expr RIGHT_BRACKET
   83 call: lvalue • callsufix

    ASSIGNMENT        shift, and go to state 89
    INCREMENT         shift, and go to state 90
    DECREMENT         shift, and go to state 91
    PERIOD            shift, and go to state 92
    LEFT_BRACKET      shift, and go to state 93
    LEFT_PARENTHESIS  shift, and go to state 94
    DOUBLE_PERIOD     shift, and go to state 95

    $default  reduce using rule 57 (primary)

    callsufix   go to state 96
    normcall    go to state 97
    methodcall  go to state 98


State 37

   61 lvalue: member •

    $default  reduce using rule 61 (lvalue)


State 38

   54 primary: objectdef •

    $default  reduce using rule 54 (primary)


State 39

   56 primary: const •

    $default  reduce using rule 56 (primary)


State 40

   53 primary: call •
   64 member: call • PERIOD ID
   65       | call • LEFT_BRACKET expr RIGHT_BRACKET
   82 call: call • LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    PERIOD            shift, and go to state 99
    LEFT_BRACKET      shift, and go to state 100
    LEFT_PARENTHESIS  shift, and go to state 101

    $default  reduce using rule 53 (primary)


State 41

   91 ifstmt: ifprefix • stmt
   92       | ifprefix • stmt elseprefix stmt

    IF                  shift, and go to state 4
    WHILE               shift, and go to state 5
    FOR                 shift, and go to state 6
    FUNCTION            shift, and go to state 7
    RETURN              shift, and go to state 8
    BREAK               shift, and go to state 9
    CONTINUE            shift, and go to state 10
    NOT                 shift, and go to state 11
    LOCAL               shift, and go to state 12
    TRUE                shift, and go to state 13
    FALSE               shift, and go to state 14
    NIL                 shift, and go to state 15
    MINUS               shift, and go to state 16
    INCREMENT           shift, and go to state 17
    DECREMENT           shift, and go to state 18
    LEFT_CURLY_BRACKET  shift, and go to state 19
    SEMICOLON           shift, and go to state 20
    LEFT_BRACKET        shift, and go to state 21
    LEFT_PARENTHESIS    shift, and go to state 22
    DOUBLE_COLON        shift, and go to state 23
    ID                  shift, and go to state 24
    INTEGER             shift, and go to state 25
    STRING              shift, and go to state 26
    REAL                shift, and go to state 27

    stmt        go to state 102
    expr        go to state 29
    assignexpr  go to state 30
    term        go to state 31
    block       go to state 32
    funcprefix  go to state 33
    funcdef     go to state 34
    primary     go to state 35
    lvalue      go to state 36
    member      go to state 37
    objectdef   go to state 38
    const       go to state 39
    call        go to state 40
    ifprefix    go to state 41
    ifstmt      go to state 42
    returnstmt  go to state 43
    forprefix   go to state 44
    forstmt     go to state 45
    whilestart  go to state 46
    whilestmt   go to state 47
    break       go to state 48
    continue    go to state 49


State 42

    5 stmt: ifstmt •

    $default  reduce using rule 5 (stmt)


State 43

    6 stmt: returnstmt •

    $default  reduce using rule 6 (stmt)


State 44

   99 forstmt: forprefix • N elist RIGHT_PARENTHESIS N loopstmt N

    $default  reduce using rule 95 (N)

    N  go to state 103


State 45

    7 stmt: forstmt •

    $default  reduce using rule 7 (stmt)


State 46

  102 whilestmt: whilestart • whilecond loopstmt

    LEFT_PARENTHESIS  shift, and go to state 104

    whilecond  go to state 105


State 47

    8 stmt: whilestmt •

    $default  reduce using rule 8 (stmt)


State 48

    9 stmt: break •

    $default  reduce using rule 9 (stmt)


State 49

   10 stmt: continue •

    $default  reduce using rule 10 (stmt)


State 50

   89 ifprefix: IF LEFT_PARENTHESIS • expr RIGHT_PARENTHESIS

    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    MINUS             shift, and go to state 16
    INCREMENT         shift, and go to state 17
    DECREMENT         shift, and go to state 18
    LEFT_BRACKET      shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 23
    ID                shift, and go to state 24
    INTEGER           shift, and go to state 25
    STRING            shift, and go to state 26
    REAL              shift, and go to state 27

    expr        go to state 106
    assignexpr  go to state 30
    term        go to state 31
    primary     go to state 35
    lvalue      go to state 36
    member      go to state 37
    objectdef   go to state 38
    const       go to state 39
    call        go to state 40


State 51

   98 forprefix: FOR $@5 • LEFT_PARENTHESIS elist SEMICOLON M expr SEMICOLON

    LEFT_PARENTHESIS  shift, and go to state 107


State 52

   43 funcprefix: FUNCTION $@2 • funcname

    ID  shift, and go to state 108

    $default  reduce using rule 41 (funcname)

    funcname  go to state 109


State 53

   93 returnstmt: RETURN SEMICOLON •

    $default  reduce using rule 93 (returnstmt)


State 54

   15 expr: expr • PLUS expr
   16     | expr • MINUS expr
   17     | expr • MULTIPLY expr
   18     | expr • DIVIDE expr
   19     | expr • MODULUS expr
   20     | expr • LESS_THAN expr
   21     | expr • GREATER_THAN expr
   22     | expr • LESS_THAN_OR_EQUAL expr
   23     | expr • GREATER_THAN_OR_EQUAL expr
   24     | expr • EQUAL expr
   25     | expr • NOT_EQUAL expr
   26     | expr • AND expr
   27     | expr • OR expr
   94 returnstmt: RETURN expr • SEMICOLON

    AND                    shift, and go to state 73
    OR                     shift, and go to state 74
    PLUS                   shift, and go to state 75
    MINUS                  shift, and go to state 76
    MULTIPLY               shift, and go to state 77
    DIVIDE                 shift, and go to state 78
    MODULUS                shift, and go to state 79
    LESS_THAN              shift, and go to state 80
    GREATER_THAN           shift, and go to state 81
    LESS_THAN_OR_EQUAL     shift, and go to state 82
    GREATER_THAN_OR_EQUAL  shift, and go to state 83
    EQUAL                  shift, and go to state 84
    NOT_EQUAL              shift, and go to state 85
    SEMICOLON              shift, and go to state 110


State 55

  106 break: BREAK SEMICOLON •

    $default  reduce using rule 106 (break)


State 56

  107 continue: CONTINUE SEMICOLON •

    $default  reduce using rule 107 (continue)


State 57

   15 expr: expr • PLUS expr
   16     | expr • MINUS expr
   17     | expr • MULTIPLY expr
   18     | expr • DIVIDE expr
   19     | expr • MODULUS expr
   20     | expr • LESS_THAN expr
   21     | expr • GREATER_THAN expr
   22     | expr • LESS_THAN_OR_EQUAL expr
   23     | expr • GREATER_THAN_OR_EQUAL expr
   24     | expr • EQUAL expr
   25     | expr • NOT_EQUAL expr
   26     | expr • AND expr
   27     | expr • OR expr
   32 term: NOT expr •

    $default  reduce using rule 32 (term)


State 58

   59 lvalue: LOCAL ID •

    $default  reduce using rule 59 (lvalue)


State 59

   15 expr: expr • PLUS expr
   16     | expr • MINUS expr
   17     | expr • MULTIPLY expr
   18     | expr • DIVIDE expr
   19     | expr • MODULUS expr
   20     | expr • LESS_THAN expr
   21     | expr • GREATER_THAN expr
   22     | expr • LESS_THAN_OR_EQUAL expr
   23     | expr • GREATER_THAN_OR_EQUAL expr
   24     | expr • EQUAL expr
   25     | expr • NOT_EQUAL expr
   26     | expr • AND expr
   27     | expr • OR expr
   31 term: MINUS expr •

    $default  reduce using rule 31 (term)


State 60

   84 call: LEFT_PARENTHESIS • funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    FUNCTION  shift, and go to state 7

    funcprefix  go to state 33
    funcdef     go to state 111


State 61

   34 term: INCREMENT lvalue •
   62 member: lvalue • PERIOD ID
   63       | lvalue • LEFT_BRACKET expr RIGHT_BRACKET
   83 call: lvalue • callsufix

    PERIOD            shift, and go to state 92
    LEFT_BRACKET      shift, and go to state 93
    LEFT_PARENTHESIS  shift, and go to state 94
    DOUBLE_PERIOD     shift, and go to state 95

    $default  reduce using rule 34 (term)

    callsufix   go to state 96
    normcall    go to state 97
    methodcall  go to state 98


State 62

   64 member: call • PERIOD ID
   65       | call • LEFT_BRACKET expr RIGHT_BRACKET
   82 call: call • LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    PERIOD            shift, and go to state 99
    LEFT_BRACKET      shift, and go to state 100
    LEFT_PARENTHESIS  shift, and go to state 101


State 63

   36 term: DECREMENT lvalue •
   62 member: lvalue • PERIOD ID
   63       | lvalue • LEFT_BRACKET expr RIGHT_BRACKET
   83 call: lvalue • callsufix

    PERIOD            shift, and go to state 92
    LEFT_BRACKET      shift, and go to state 93
    LEFT_PARENTHESIS  shift, and go to state 94
    DOUBLE_PERIOD     shift, and go to state 95

    $default  reduce using rule 36 (term)

    callsufix   go to state 96
    normcall    go to state 97
    methodcall  go to state 98


State 64

   39 block: LEFT_CURLY_BRACKET $@1 • statements RIGHT_CURLY_BRACKET

    $default  reduce using rule 3 (statements)

    statements  go to state 112


State 65

   71 indexedelem: LEFT_CURLY_BRACKET • expr COLON expr RIGHT_CURLY_BRACKET

    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    MINUS             shift, and go to state 16
    INCREMENT         shift, and go to state 17
    DECREMENT         shift, and go to state 18
    LEFT_BRACKET      shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 23
    ID                shift, and go to state 24
    INTEGER           shift, and go to state 25
    STRING            shift, and go to state 26
    REAL              shift, and go to state 27

    expr        go to state 113
    assignexpr  go to state 30
    term        go to state 31
    primary     go to state 35
    lvalue      go to state 36
    member      go to state 37
    objectdef   go to state 38
    const       go to state 39
    call        go to state 40


State 66

   15 expr: expr • PLUS expr
   16     | expr • MINUS expr
   17     | expr • MULTIPLY expr
   18     | expr • DIVIDE expr
   19     | expr • MODULUS expr
   20     | expr • LESS_THAN expr
   21     | expr • GREATER_THAN expr
   22     | expr • LESS_THAN_OR_EQUAL expr
   23     | expr • GREATER_THAN_OR_EQUAL expr
   24     | expr • EQUAL expr
   25     | expr • NOT_EQUAL expr
   26     | expr • AND expr
   27     | expr • OR expr
   72 elist: expr • next

    AND                    shift, and go to state 73
    OR                     shift, and go to state 74
    PLUS                   shift, and go to state 75
    MINUS                  shift, and go to state 76
    MULTIPLY               shift, and go to state 77
    DIVIDE                 shift, and go to state 78
    MODULUS                shift, and go to state 79
    LESS_THAN              shift, and go to state 80
    GREATER_THAN           shift, and go to state 81
    LESS_THAN_OR_EQUAL     shift, and go to state 82
    GREATER_THAN_OR_EQUAL  shift, and go to state 83
    EQUAL                  shift, and go to state 84
    NOT_EQUAL              shift, and go to state 85
    COMMA                  shift, and go to state 114

    $default  reduce using rule 75 (next)

    next  go to state 115


State 67

   67 objectdef: LEFT_BRACKET indexed • RIGHT_BRACKET

    RIGHT_BRACKET  shift, and go to state 116


State 68

   68 indexed: indexedelem • nextindexelem

    COMMA  shift, and go to state 117

    $default  reduce using rule 70 (nextindexelem)

    nextindexelem  go to state 118


State 69

   66 objectdef: LEFT_BRACKET elist • RIGHT_BRACKET

    RIGHT_BRACKET  shift, and go to state 119


State 70

   15 expr: expr • PLUS expr
   16     | expr • MINUS expr
   17     | expr • MULTIPLY expr
   18     | expr • DIVIDE expr
   19     | expr • MODULUS expr
   20     | expr • LESS_THAN expr
   21     | expr • GREATER_THAN expr
   22     | expr • LESS_THAN_OR_EQUAL expr
   23     | expr • GREATER_THAN_OR_EQUAL expr
   24     | expr • EQUAL expr
   25     | expr • NOT_EQUAL expr
   26     | expr • AND expr
   27     | expr • OR expr
   30 term: LEFT_PARENTHESIS expr • RIGHT_PARENTHESIS

    AND                    shift, and go to state 73
    OR                     shift, and go to state 74
    PLUS                   shift, and go to state 75
    MINUS                  shift, and go to state 76
    MULTIPLY               shift, and go to state 77
    DIVIDE                 shift, and go to state 78
    MODULUS                shift, and go to state 79
    LESS_THAN              shift, and go to state 80
    GREATER_THAN           shift, and go to state 81
    LESS_THAN_OR_EQUAL     shift, and go to state 82
    GREATER_THAN_OR_EQUAL  shift, and go to state 83
    EQUAL                  shift, and go to state 84
    NOT_EQUAL              shift, and go to state 85
    RIGHT_PARENTHESIS      shift, and go to state 120


State 71

   55 primary: LEFT_PARENTHESIS funcdef • RIGHT_PARENTHESIS
   84 call: LEFT_PARENTHESIS funcdef • RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 121


State 72

   60 lvalue: DOUBLE_COLON ID •

    $default  reduce using rule 60 (lvalue)


State 73

   26 expr: expr AND • expr

    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    MINUS             shift, and go to state 16
    INCREMENT         shift, and go to state 17
    DECREMENT         shift, and go to state 18
    LEFT_BRACKET      shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 23
    ID                shift, and go to state 24
    INTEGER           shift, and go to state 25
    STRING            shift, and go to state 26
    REAL              shift, and go to state 27

    expr        go to state 122
    assignexpr  go to state 30
    term        go to state 31
    primary     go to state 35
    lvalue      go to state 36
    member      go to state 37
    objectdef   go to state 38
    const       go to state 39
    call        go to state 40


State 74

   27 expr: expr OR • expr

    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    MINUS             shift, and go to state 16
    INCREMENT         shift, and go to state 17
    DECREMENT         shift, and go to state 18
    LEFT_BRACKET      shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 23
    ID                shift, and go to state 24
    INTEGER           shift, and go to state 25
    STRING            shift, and go to state 26
    REAL              shift, and go to state 27

    expr        go to state 123
    assignexpr  go to state 30
    term        go to state 31
    primary     go to state 35
    lvalue      go to state 36
    member      go to state 37
    objectdef   go to state 38
    const       go to state 39
    call        go to state 40


State 75

   15 expr: expr PLUS • expr

    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    MINUS             shift, and go to state 16
    INCREMENT         shift, and go to state 17
    DECREMENT         shift, and go to state 18
    LEFT_BRACKET      shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 23
    ID                shift, and go to state 24
    INTEGER           shift, and go to state 25
    STRING            shift, and go to state 26
    REAL              shift, and go to state 27

    expr        go to state 124
    assignexpr  go to state 30
    term        go to state 31
    primary     go to state 35
    lvalue      go to state 36
    member      go to state 37
    objectdef   go to state 38
    const       go to state 39
    call        go to state 40


State 76

   16 expr: expr MINUS • expr

    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    MINUS             shift, and go to state 16
    INCREMENT         shift, and go to state 17
    DECREMENT         shift, and go to state 18
    LEFT_BRACKET      shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 23
    ID                shift, and go to state 24
    INTEGER           shift, and go to state 25
    STRING            shift, and go to state 26
    REAL              shift, and go to state 27

    expr        go to state 125
    assignexpr  go to state 30
    term        go to state 31
    primary     go to state 35
    lvalue      go to state 36
    member      go to state 37
    objectdef   go to state 38
    const       go to state 39
    call        go to state 40


State 77

   17 expr: expr MULTIPLY • expr

    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    MINUS             shift, and go to state 16
    INCREMENT         shift, and go to state 17
    DECREMENT         shift, and go to state 18
    LEFT_BRACKET      shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 23
    ID                shift, and go to state 24
    INTEGER           shift, and go to state 25
    STRING            shift, and go to state 26
    REAL              shift, and go to state 27

    expr        go to state 126
    assignexpr  go to state 30
    term        go to state 31
    primary     go to state 35
    lvalue      go to state 36
    member      go to state 37
    objectdef   go to state 38
    const       go to state 39
    call        go to state 40


State 78

   18 expr: expr DIVIDE • expr

    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    MINUS             shift, and go to state 16
    INCREMENT         shift, and go to state 17
    DECREMENT         shift, and go to state 18
    LEFT_BRACKET      shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 23
    ID                shift, and go to state 24
    INTEGER           shift, and go to state 25
    STRING            shift, and go to state 26
    REAL              shift, and go to state 27

    expr        go to state 127
    assignexpr  go to state 30
    term        go to state 31
    primary     go to state 35
    lvalue      go to state 36
    member      go to state 37
    objectdef   go to state 38
    const       go to state 39
    call        go to state 40


State 79

   19 expr: expr MODULUS • expr

    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    MINUS             shift, and go to state 16
    INCREMENT         shift, and go to state 17
    DECREMENT         shift, and go to state 18
    LEFT_BRACKET      shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 23
    ID                shift, and go to state 24
    INTEGER           shift, and go to state 25
    STRING            shift, and go to state 26
    REAL              shift, and go to state 27

    expr        go to state 128
    assignexpr  go to state 30
    term        go to state 31
    primary     go to state 35
    lvalue      go to state 36
    member      go to state 37
    objectdef   go to state 38
    const       go to state 39
    call        go to state 40


State 80

   20 expr: expr LESS_THAN • expr

    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    MINUS             shift, and go to state 16
    INCREMENT         shift, and go to state 17
    DECREMENT         shift, and go to state 18
    LEFT_BRACKET      shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 23
    ID                shift, and go to state 24
    INTEGER           shift, and go to state 25
    STRING            shift, and go to state 26
    REAL              shift, and go to state 27

    expr        go to state 129
    assignexpr  go to state 30
    term        go to state 31
    primary     go to state 35
    lvalue      go to state 36
    member      go to state 37
    objectdef   go to state 38
    const       go to state 39
    call        go to state 40


State 81

   21 expr: expr GREATER_THAN • expr

    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    MINUS             shift, and go to state 16
    INCREMENT         shift, and go to state 17
    DECREMENT         shift, and go to state 18
    LEFT_BRACKET      shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 23
    ID                shift, and go to state 24
    INTEGER           shift, and go to state 25
    STRING            shift, and go to state 26
    REAL              shift, and go to state 27

    expr        go to state 130
    assignexpr  go to state 30
    term        go to state 31
    primary     go to state 35
    lvalue      go to state 36
    member      go to state 37
    objectdef   go to state 38
    const       go to state 39
    call        go to state 40


State 82

   22 expr: expr LESS_THAN_OR_EQUAL • expr

    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    MINUS             shift, and go to state 16
    INCREMENT         shift, and go to state 17
    DECREMENT         shift, and go to state 18
    LEFT_BRACKET      shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 23
    ID                shift, and go to state 24
    INTEGER           shift, and go to state 25
    STRING            shift, and go to state 26
    REAL              shift, and go to state 27

    expr        go to state 131
    assignexpr  go to state 30
    term        go to state 31
    primary     go to state 35
    lvalue      go to state 36
    member      go to state 37
    objectdef   go to state 38
    const       go to state 39
    call        go to state 40


State 83

   23 expr: expr GREATER_THAN_OR_EQUAL • expr

    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    MINUS             shift, and go to state 16
    INCREMENT         shift, and go to state 17
    DECREMENT         shift, and go to state 18
    LEFT_BRACKET      shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 23
    ID                shift, and go to state 24
    INTEGER           shift, and go to state 25
    STRING            shift, and go to state 26
    REAL              shift, and go to state 27

    expr        go to state 132
    assignexpr  go to state 30
    term        go to state 31
    primary     go to state 35
    lvalue      go to state 36
    member      go to state 37
    objectdef   go to state 38
    const       go to state 39
    call        go to state 40


State 84

   24 expr: expr EQUAL • expr

    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    MINUS             shift, and go to state 16
    INCREMENT         shift, and go to state 17
    DECREMENT         shift, and go to state 18
    LEFT_BRACKET      shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 23
    ID                shift, and go to state 24
    INTEGER           shift, and go to state 25
    STRING            shift, and go to state 26
    REAL              shift, and go to state 27

    expr        go to state 133
    assignexpr  go to state 30
    term        go to state 31
    primary     go to state 35
    lvalue      go to state 36
    member      go to state 37
    objectdef   go to state 38
    const       go to state 39
    call        go to state 40


State 85

   25 expr: expr NOT_EQUAL • expr

    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    MINUS             shift, and go to state 16
    INCREMENT         shift, and go to state 17
    DECREMENT         shift, and go to state 18
    LEFT_BRACKET      shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 23
    ID                shift, and go to state 24
    INTEGER           shift, and go to state 25
    STRING            shift, and go to state 26
    REAL              shift, and go to state 27

    expr        go to state 134
    assignexpr  go to state 30
    term        go to state 31
    primary     go to state 35
    lvalue      go to state 36
    member      go to state 37
    objectdef   go to state 38
    const       go to state 39
    call        go to state 40


State 86

    4 stmt: expr SEMICOLON •

    $default  reduce using rule 4 (stmt)


State 87

   44 funcargs: LEFT_PARENTHESIS • idlist RIGHT_PARENTHESIS

    ID  shift, and go to state 135

    $default  reduce using rule 49 (idlist)

    idlist  go to state 136


State 88

   46 funcdef: funcprefix funcargs • funcbody

    LEFT_CURLY_BRACKET  shift, and go to state 19

    block     go to state 137
    funcbody  go to state 138


State 89

   29 assignexpr: lvalue ASSIGNMENT • expr

    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    MINUS             shift, and go to state 16
    INCREMENT         shift, and go to state 17
    DECREMENT         shift, and go to state 18
    LEFT_BRACKET      shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 23
    ID                shift, and go to state 24
    INTEGER           shift, and go to state 25
    STRING            shift, and go to state 26
    REAL              shift, and go to state 27

    expr        go to state 139
    assignexpr  go to state 30
    term        go to state 31
    primary     go to state 35
    lvalue      go to state 36
    member      go to state 37
    objectdef   go to state 38
    const       go to state 39
    call        go to state 40


State 90

   35 term: lvalue INCREMENT •

    $default  reduce using rule 35 (term)


State 91

   37 term: lvalue DECREMENT •

    $default  reduce using rule 37 (term)


State 92

   62 member: lvalue PERIOD • ID

    ID  shift, and go to state 140


State 93

   63 member: lvalue LEFT_BRACKET • expr RIGHT_BRACKET

    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    MINUS             shift, and go to state 16
    INCREMENT         shift, and go to state 17
    DECREMENT         shift, and go to state 18
    LEFT_BRACKET      shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 23
    ID                shift, and go to state 24
    INTEGER           shift, and go to state 25
    STRING            shift, and go to state 26
    REAL              shift, and go to state 27

    expr        go to state 141
    assignexpr  go to state 30
    term        go to state 31
    primary     go to state 35
    lvalue      go to state 36
    member      go to state 37
    objectdef   go to state 38
    const       go to state 39
    call        go to state 40


State 94

   87 normcall: LEFT_PARENTHESIS • elist RIGHT_PARENTHESIS

    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    MINUS             shift, and go to state 16
    INCREMENT         shift, and go to state 17
    DECREMENT         shift, and go to state 18
    LEFT_BRACKET      shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 23
    ID                shift, and go to state 24
    INTEGER           shift, and go to state 25
    STRING            shift, and go to state 26
    REAL              shift, and go to state 27

    $default  reduce using rule 73 (elist)

    expr        go to state 66
    assignexpr  go to state 30
    term        go to state 31
    primary     go to state 35
    lvalue      go to state 36
    member      go to state 37
    objectdef   go to state 38
    elist       go to state 142
    const       go to state 39
    call        go to state 40


State 95

   88 methodcall: DOUBLE_PERIOD • ID LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    ID  shift, and go to state 143


State 96

   83 call: lvalue callsufix •

    $default  reduce using rule 83 (call)


State 97

   85 callsufix: normcall •

    $default  reduce using rule 85 (callsufix)


State 98

   86 callsufix: methodcall •

    $default  reduce using rule 86 (callsufix)


State 99

   64 member: call PERIOD • ID

    ID  shift, and go to state 144


State 100

   65 member: call LEFT_BRACKET • expr RIGHT_BRACKET

    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    MINUS             shift, and go to state 16
    INCREMENT         shift, and go to state 17
    DECREMENT         shift, and go to state 18
    LEFT_BRACKET      shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 23
    ID                shift, and go to state 24
    INTEGER           shift, and go to state 25
    STRING            shift, and go to state 26
    REAL              shift, and go to state 27

    expr        go to state 145
    assignexpr  go to state 30
    term        go to state 31
    primary     go to state 35
    lvalue      go to state 36
    member      go to state 37
    objectdef   go to state 38
    const       go to state 39
    call        go to state 40


State 101

   82 call: call LEFT_PARENTHESIS • elist RIGHT_PARENTHESIS

    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    MINUS             shift, and go to state 16
    INCREMENT         shift, and go to state 17
    DECREMENT         shift, and go to state 18
    LEFT_BRACKET      shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 23
    ID                shift, and go to state 24
    INTEGER           shift, and go to state 25
    STRING            shift, and go to state 26
    REAL              shift, and go to state 27

    $default  reduce using rule 73 (elist)

    expr        go to state 66
    assignexpr  go to state 30
    term        go to state 31
    primary     go to state 35
    lvalue      go to state 36
    member      go to state 37
    objectdef   go to state 38
    elist       go to state 146
    const       go to state 39
    call        go to state 40


State 102

   91 ifstmt: ifprefix stmt •
   92       | ifprefix stmt • elseprefix stmt

    ELSE  shift, and go to state 147

    ELSE      [reduce using rule 91 (ifstmt)]
    $default  reduce using rule 91 (ifstmt)

    elseprefix  go to state 148


State 103

   99 forstmt: forprefix N • elist RIGHT_PARENTHESIS N loopstmt N

    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    MINUS             shift, and go to state 16
    INCREMENT         shift, and go to state 17
    DECREMENT         shift, and go to state 18
    LEFT_BRACKET      shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 23
    ID                shift, and go to state 24
    INTEGER           shift, and go to state 25
    STRING            shift, and go to state 26
    REAL              shift, and go to state 27

    $default  reduce using rule 73 (elist)

    expr        go to state 66
    assignexpr  go to state 30
    term        go to state 31
    primary     go to state 35
    lvalue      go to state 36
    member      go to state 37
    objectdef   go to state 38
    elist       go to state 149
    const       go to state 39
    call        go to state 40


State 104

  101 whilecond: LEFT_PARENTHESIS • expr RIGHT_PARENTHESIS

    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    MINUS             shift, and go to state 16
    INCREMENT         shift, and go to state 17
    DECREMENT         shift, and go to state 18
    LEFT_BRACKET      shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 23
    ID                shift, and go to state 24
    INTEGER           shift, and go to state 25
    STRING            shift, and go to state 26
    REAL              shift, and go to state 27

    expr        go to state 150
    assignexpr  go to state 30
    term        go to state 31
    primary     go to state 35
    lvalue      go to state 36
    member      go to state 37
    objectdef   go to state 38
    const       go to state 39
    call        go to state 40


State 105

  102 whilestmt: whilestart whilecond • loopstmt

    $default  reduce using rule 103 (loopstart)

    loopstart  go to state 151
    loopstmt   go to state 152


State 106

   15 expr: expr • PLUS expr
   16     | expr • MINUS expr
   17     | expr • MULTIPLY expr
   18     | expr • DIVIDE expr
   19     | expr • MODULUS expr
   20     | expr • LESS_THAN expr
   21     | expr • GREATER_THAN expr
   22     | expr • LESS_THAN_OR_EQUAL expr
   23     | expr • GREATER_THAN_OR_EQUAL expr
   24     | expr • EQUAL expr
   25     | expr • NOT_EQUAL expr
   26     | expr • AND expr
   27     | expr • OR expr
   89 ifprefix: IF LEFT_PARENTHESIS expr • RIGHT_PARENTHESIS

    AND                    shift, and go to state 73
    OR                     shift, and go to state 74
    PLUS                   shift, and go to state 75
    MINUS                  shift, and go to state 76
    MULTIPLY               shift, and go to state 77
    DIVIDE                 shift, and go to state 78
    MODULUS                shift, and go to state 79
    LESS_THAN              shift, and go to state 80
    GREATER_THAN           shift, and go to state 81
    LESS_THAN_OR_EQUAL     shift, and go to state 82
    GREATER_THAN_OR_EQUAL  shift, and go to state 83
    EQUAL                  shift, and go to state 84
    NOT_EQUAL              shift, and go to state 85
    RIGHT_PARENTHESIS      shift, and go to state 153


State 107

   98 forprefix: FOR $@5 LEFT_PARENTHESIS • elist SEMICOLON M expr SEMICOLON

    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    MINUS             shift, and go to state 16
    INCREMENT         shift, and go to state 17
    DECREMENT         shift, and go to state 18
    LEFT_BRACKET      shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 23
    ID                shift, and go to state 24
    INTEGER           shift, and go to state 25
    STRING            shift, and go to state 26
    REAL              shift, and go to state 27

    $default  reduce using rule 73 (elist)

    expr        go to state 66
    assignexpr  go to state 30
    term        go to state 31
    primary     go to state 35
    lvalue      go to state 36
    member      go to state 37
    objectdef   go to state 38
    elist       go to state 154
    const       go to state 39
    call        go to state 40


State 108

   40 funcname: ID •

    $default  reduce using rule 40 (funcname)


State 109

   43 funcprefix: FUNCTION $@2 funcname •

    $default  reduce using rule 43 (funcprefix)


State 110

   94 returnstmt: RETURN expr SEMICOLON •

    $default  reduce using rule 94 (returnstmt)


State 111

   84 call: LEFT_PARENTHESIS funcdef • RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 155


State 112

    2 statements: statements • stmt
   39 block: LEFT_CURLY_BRACKET $@1 statements • RIGHT_CURLY_BRACKET

    IF                   shift, and go to state 4
    WHILE                shift, and go to state 5
    FOR                  shift, and go to state 6
    FUNCTION             shift, and go to state 7
    RETURN               shift, and go to state 8
    BREAK                shift, and go to state 9
    CONTINUE             shift, and go to state 10
    NOT                  shift, and go to state 11
    LOCAL                shift, and go to state 12
    TRUE                 shift, and go to state 13
    FALSE                shift, and go to state 14
    NIL                  shift, and go to state 15
    MINUS                shift, and go to state 16
    INCREMENT            shift, and go to state 17
    DECREMENT            shift, and go to state 18
    LEFT_CURLY_BRACKET   shift, and go to state 19
    RIGHT_CURLY_BRACKET  shift, and go to state 156
    SEMICOLON            shift, and go to state 20
    LEFT_BRACKET         shift, and go to state 21
    LEFT_PARENTHESIS     shift, and go to state 22
    DOUBLE_COLON         shift, and go to state 23
    ID                   shift, and go to state 24
    INTEGER              shift, and go to state 25
    STRING               shift, and go to state 26
    REAL                 shift, and go to state 27

    stmt        go to state 28
    expr        go to state 29
    assignexpr  go to state 30
    term        go to state 31
    block       go to state 32
    funcprefix  go to state 33
    funcdef     go to state 34
    primary     go to state 35
    lvalue      go to state 36
    member      go to state 37
    objectdef   go to state 38
    const       go to state 39
    call        go to state 40
    ifprefix    go to state 41
    ifstmt      go to state 42
    returnstmt  go to state 43
    forprefix   go to state 44
    forstmt     go to state 45
    whilestart  go to state 46
    whilestmt   go to state 47
    break       go to state 48
    continue    go to state 49


State 113

   15 expr: expr • PLUS expr
   16     | expr • MINUS expr
   17     | expr • MULTIPLY expr
   18     | expr • DIVIDE expr
   19     | expr • MODULUS expr
   20     | expr • LESS_THAN expr
   21     | expr • GREATER_THAN expr
   22     | expr • LESS_THAN_OR_EQUAL expr
   23     | expr • GREATER_THAN_OR_EQUAL expr
   24     | expr • EQUAL expr
   25     | expr • NOT_EQUAL expr
   26     | expr • AND expr
   27     | expr • OR expr
   71 indexedelem: LEFT_CURLY_BRACKET expr • COLON expr RIGHT_CURLY_BRACKET

    AND                    shift, and go to state 73
    OR                     shift, and go to state 74
    PLUS                   shift, and go to state 75
    MINUS                  shift, and go to state 76
    MULTIPLY               shift, and go to state 77
    DIVIDE                 shift, and go to state 78
    MODULUS                shift, and go to state 79
    LESS_THAN              shift, and go to state 80
    GREATER_THAN           shift, and go to state 81
    LESS_THAN_OR_EQUAL     shift, and go to state 82
    GREATER_THAN_OR_EQUAL  shift, and go to state 83
    EQUAL                  shift, and go to state 84
    NOT_EQUAL              shift, and go to state 85
    COLON                  shift, and go to state 157


State 114

   74 next: COMMA • expr next

    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    MINUS             shift, and go to state 16
    INCREMENT         shift, and go to state 17
    DECREMENT         shift, and go to state 18
    LEFT_BRACKET      shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 23
    ID                shift, and go to state 24
    INTEGER           shift, and go to state 25
    STRING            shift, and go to state 26
    REAL              shift, and go to state 27

    expr        go to state 158
    assignexpr  go to state 30
    term        go to state 31
    primary     go to state 35
    lvalue      go to state 36
    member      go to state 37
    objectdef   go to state 38
    const       go to state 39
    call        go to state 40


State 115

   72 elist: expr next •

    $default  reduce using rule 72 (elist)


State 116

   67 objectdef: LEFT_BRACKET indexed RIGHT_BRACKET •

    $default  reduce using rule 67 (objectdef)


State 117

   69 nextindexelem: COMMA • indexedelem nextindexelem

    LEFT_CURLY_BRACKET  shift, and go to state 65

    indexedelem  go to state 159


State 118

   68 indexed: indexedelem nextindexelem •

    $default  reduce using rule 68 (indexed)


State 119

   66 objectdef: LEFT_BRACKET elist RIGHT_BRACKET •

    $default  reduce using rule 66 (objectdef)


State 120

   30 term: LEFT_PARENTHESIS expr RIGHT_PARENTHESIS •

    $default  reduce using rule 30 (term)


State 121

   55 primary: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS •
   84 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS • LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 160

    $default  reduce using rule 55 (primary)


State 122

   15 expr: expr • PLUS expr
   16     | expr • MINUS expr
   17     | expr • MULTIPLY expr
   18     | expr • DIVIDE expr
   19     | expr • MODULUS expr
   20     | expr • LESS_THAN expr
   21     | expr • GREATER_THAN expr
   22     | expr • LESS_THAN_OR_EQUAL expr
   23     | expr • GREATER_THAN_OR_EQUAL expr
   24     | expr • EQUAL expr
   25     | expr • NOT_EQUAL expr
   26     | expr • AND expr
   26     | expr AND expr •
   27     | expr • OR expr

    PLUS                   shift, and go to state 75
    MINUS                  shift, and go to state 76
    MULTIPLY               shift, and go to state 77
    DIVIDE                 shift, and go to state 78
    MODULUS                shift, and go to state 79
    LESS_THAN              shift, and go to state 80
    GREATER_THAN           shift, and go to state 81
    LESS_THAN_OR_EQUAL     shift, and go to state 82
    GREATER_THAN_OR_EQUAL  shift, and go to state 83
    EQUAL                  shift, and go to state 84
    NOT_EQUAL              shift, and go to state 85

    $default  reduce using rule 26 (expr)


State 123

   15 expr: expr • PLUS expr
   16     | expr • MINUS expr
   17     | expr • MULTIPLY expr
   18     | expr • DIVIDE expr
   19     | expr • MODULUS expr
   20     | expr • LESS_THAN expr
   21     | expr • GREATER_THAN expr
   22     | expr • LESS_THAN_OR_EQUAL expr
   23     | expr • GREATER_THAN_OR_EQUAL expr
   24     | expr • EQUAL expr
   25     | expr • NOT_EQUAL expr
   26     | expr • AND expr
   27     | expr • OR expr
   27     | expr OR expr •

    AND                    shift, and go to state 73
    PLUS                   shift, and go to state 75
    MINUS                  shift, and go to state 76
    MULTIPLY               shift, and go to state 77
    DIVIDE                 shift, and go to state 78
    MODULUS                shift, and go to state 79
    LESS_THAN              shift, and go to state 80
    GREATER_THAN           shift, and go to state 81
    LESS_THAN_OR_EQUAL     shift, and go to state 82
    GREATER_THAN_OR_EQUAL  shift, and go to state 83
    EQUAL                  shift, and go to state 84
    NOT_EQUAL              shift, and go to state 85

    $default  reduce using rule 27 (expr)


State 124

   15 expr: expr • PLUS expr
   15     | expr PLUS expr •
   16     | expr • MINUS expr
   17     | expr • MULTIPLY expr
   18     | expr • DIVIDE expr
   19     | expr • MODULUS expr
   20     | expr • LESS_THAN expr
   21     | expr • GREATER_THAN expr
   22     | expr • LESS_THAN_OR_EQUAL expr
   23     | expr • GREATER_THAN_OR_EQUAL expr
   24     | expr • EQUAL expr
   25     | expr • NOT_EQUAL expr
   26     | expr • AND expr
   27     | expr • OR expr

    MULTIPLY  shift, and go to state 77
    DIVIDE    shift, and go to state 78
    MODULUS   shift, and go to state 79

    $default  reduce using rule 15 (expr)


State 125

   15 expr: expr • PLUS expr
   16     | expr • MINUS expr
   16     | expr MINUS expr •
   17     | expr • MULTIPLY expr
   18     | expr • DIVIDE expr
   19     | expr • MODULUS expr
   20     | expr • LESS_THAN expr
   21     | expr • GREATER_THAN expr
   22     | expr • LESS_THAN_OR_EQUAL expr
   23     | expr • GREATER_THAN_OR_EQUAL expr
   24     | expr • EQUAL expr
   25     | expr • NOT_EQUAL expr
   26     | expr • AND expr
   27     | expr • OR expr

    MULTIPLY  shift, and go to state 77
    DIVIDE    shift, and go to state 78
    MODULUS   shift, and go to state 79

    $default  reduce using rule 16 (expr)


State 126

   15 expr: expr • PLUS expr
   16     | expr • MINUS expr
   17     | expr • MULTIPLY expr
   17     | expr MULTIPLY expr •
   18     | expr • DIVIDE expr
   19     | expr • MODULUS expr
   20     | expr • LESS_THAN expr
   21     | expr • GREATER_THAN expr
   22     | expr • LESS_THAN_OR_EQUAL expr
   23     | expr • GREATER_THAN_OR_EQUAL expr
   24     | expr • EQUAL expr
   25     | expr • NOT_EQUAL expr
   26     | expr • AND expr
   27     | expr • OR expr

    $default  reduce using rule 17 (expr)


State 127

   15 expr: expr • PLUS expr
   16     | expr • MINUS expr
   17     | expr • MULTIPLY expr
   18     | expr • DIVIDE expr
   18     | expr DIVIDE expr •
   19     | expr • MODULUS expr
   20     | expr • LESS_THAN expr
   21     | expr • GREATER_THAN expr
   22     | expr • LESS_THAN_OR_EQUAL expr
   23     | expr • GREATER_THAN_OR_EQUAL expr
   24     | expr • EQUAL expr
   25     | expr • NOT_EQUAL expr
   26     | expr • AND expr
   27     | expr • OR expr

    $default  reduce using rule 18 (expr)


State 128

   15 expr: expr • PLUS expr
   16     | expr • MINUS expr
   17     | expr • MULTIPLY expr
   18     | expr • DIVIDE expr
   19     | expr • MODULUS expr
   19     | expr MODULUS expr •
   20     | expr • LESS_THAN expr
   21     | expr • GREATER_THAN expr
   22     | expr • LESS_THAN_OR_EQUAL expr
   23     | expr • GREATER_THAN_OR_EQUAL expr
   24     | expr • EQUAL expr
   25     | expr • NOT_EQUAL expr
   26     | expr • AND expr
   27     | expr • OR expr

    $default  reduce using rule 19 (expr)


State 129

   15 expr: expr • PLUS expr
   16     | expr • MINUS expr
   17     | expr • MULTIPLY expr
   18     | expr • DIVIDE expr
   19     | expr • MODULUS expr
   20     | expr • LESS_THAN expr
   20     | expr LESS_THAN expr •
   21     | expr • GREATER_THAN expr
   22     | expr • LESS_THAN_OR_EQUAL expr
   23     | expr • GREATER_THAN_OR_EQUAL expr
   24     | expr • EQUAL expr
   25     | expr • NOT_EQUAL expr
   26     | expr • AND expr
   27     | expr • OR expr

    PLUS      shift, and go to state 75
    MINUS     shift, and go to state 76
    MULTIPLY  shift, and go to state 77
    DIVIDE    shift, and go to state 78
    MODULUS   shift, and go to state 79

    LESS_THAN              error (nonassociative)
    GREATER_THAN           error (nonassociative)
    LESS_THAN_OR_EQUAL     error (nonassociative)
    GREATER_THAN_OR_EQUAL  error (nonassociative)

    $default  reduce using rule 20 (expr)


State 130

   15 expr: expr • PLUS expr
   16     | expr • MINUS expr
   17     | expr • MULTIPLY expr
   18     | expr • DIVIDE expr
   19     | expr • MODULUS expr
   20     | expr • LESS_THAN expr
   21     | expr • GREATER_THAN expr
   21     | expr GREATER_THAN expr •
   22     | expr • LESS_THAN_OR_EQUAL expr
   23     | expr • GREATER_THAN_OR_EQUAL expr
   24     | expr • EQUAL expr
   25     | expr • NOT_EQUAL expr
   26     | expr • AND expr
   27     | expr • OR expr

    PLUS      shift, and go to state 75
    MINUS     shift, and go to state 76
    MULTIPLY  shift, and go to state 77
    DIVIDE    shift, and go to state 78
    MODULUS   shift, and go to state 79

    LESS_THAN              error (nonassociative)
    GREATER_THAN           error (nonassociative)
    LESS_THAN_OR_EQUAL     error (nonassociative)
    GREATER_THAN_OR_EQUAL  error (nonassociative)

    $default  reduce using rule 21 (expr)


State 131

   15 expr: expr • PLUS expr
   16     | expr • MINUS expr
   17     | expr • MULTIPLY expr
   18     | expr • DIVIDE expr
   19     | expr • MODULUS expr
   20     | expr • LESS_THAN expr
   21     | expr • GREATER_THAN expr
   22     | expr • LESS_THAN_OR_EQUAL expr
   22     | expr LESS_THAN_OR_EQUAL expr •
   23     | expr • GREATER_THAN_OR_EQUAL expr
   24     | expr • EQUAL expr
   25     | expr • NOT_EQUAL expr
   26     | expr • AND expr
   27     | expr • OR expr

    PLUS      shift, and go to state 75
    MINUS     shift, and go to state 76
    MULTIPLY  shift, and go to state 77
    DIVIDE    shift, and go to state 78
    MODULUS   shift, and go to state 79

    LESS_THAN              error (nonassociative)
    GREATER_THAN           error (nonassociative)
    LESS_THAN_OR_EQUAL     error (nonassociative)
    GREATER_THAN_OR_EQUAL  error (nonassociative)

    $default  reduce using rule 22 (expr)


State 132

   15 expr: expr • PLUS expr
   16     | expr • MINUS expr
   17     | expr • MULTIPLY expr
   18     | expr • DIVIDE expr
   19     | expr • MODULUS expr
   20     | expr • LESS_THAN expr
   21     | expr • GREATER_THAN expr
   22     | expr • LESS_THAN_OR_EQUAL expr
   23     | expr • GREATER_THAN_OR_EQUAL expr
   23     | expr GREATER_THAN_OR_EQUAL expr •
   24     | expr • EQUAL expr
   25     | expr • NOT_EQUAL expr
   26     | expr • AND expr
   27     | expr • OR expr

    PLUS      shift, and go to state 75
    MINUS     shift, and go to state 76
    MULTIPLY  shift, and go to state 77
    DIVIDE    shift, and go to state 78
    MODULUS   shift, and go to state 79

    LESS_THAN              error (nonassociative)
    GREATER_THAN           error (nonassociative)
    LESS_THAN_OR_EQUAL     error (nonassociative)
    GREATER_THAN_OR_EQUAL  error (nonassociative)

    $default  reduce using rule 23 (expr)


State 133

   15 expr: expr • PLUS expr
   16     | expr • MINUS expr
   17     | expr • MULTIPLY expr
   18     | expr • DIVIDE expr
   19     | expr • MODULUS expr
   20     | expr • LESS_THAN expr
   21     | expr • GREATER_THAN expr
   22     | expr • LESS_THAN_OR_EQUAL expr
   23     | expr • GREATER_THAN_OR_EQUAL expr
   24     | expr • EQUAL expr
   24     | expr EQUAL expr •
   25     | expr • NOT_EQUAL expr
   26     | expr • AND expr
   27     | expr • OR expr

    PLUS                   shift, and go to state 75
    MINUS                  shift, and go to state 76
    MULTIPLY               shift, and go to state 77
    DIVIDE                 shift, and go to state 78
    MODULUS                shift, and go to state 79
    LESS_THAN              shift, and go to state 80
    GREATER_THAN           shift, and go to state 81
    LESS_THAN_OR_EQUAL     shift, and go to state 82
    GREATER_THAN_OR_EQUAL  shift, and go to state 83

    EQUAL      error (nonassociative)
    NOT_EQUAL  error (nonassociative)

    $default  reduce using rule 24 (expr)


State 134

   15 expr: expr • PLUS expr
   16     | expr • MINUS expr
   17     | expr • MULTIPLY expr
   18     | expr • DIVIDE expr
   19     | expr • MODULUS expr
   20     | expr • LESS_THAN expr
   21     | expr • GREATER_THAN expr
   22     | expr • LESS_THAN_OR_EQUAL expr
   23     | expr • GREATER_THAN_OR_EQUAL expr
   24     | expr • EQUAL expr
   25     | expr • NOT_EQUAL expr
   25     | expr NOT_EQUAL expr •
   26     | expr • AND expr
   27     | expr • OR expr

    PLUS                   shift, and go to state 75
    MINUS                  shift, and go to state 76
    MULTIPLY               shift, and go to state 77
    DIVIDE                 shift, and go to state 78
    MODULUS                shift, and go to state 79
    LESS_THAN              shift, and go to state 80
    GREATER_THAN           shift, and go to state 81
    LESS_THAN_OR_EQUAL     shift, and go to state 82
    GREATER_THAN_OR_EQUAL  shift, and go to state 83

    EQUAL      error (nonassociative)
    NOT_EQUAL  error (nonassociative)

    $default  reduce using rule 25 (expr)


State 135

   48 idlist: ID • $@3 nextID

    $default  reduce using rule 47 ($@3)

    $@3  go to state 161


State 136

   44 funcargs: LEFT_PARENTHESIS idlist • RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 162


State 137

   45 funcbody: block •

    $default  reduce using rule 45 (funcbody)


State 138

   46 funcdef: funcprefix funcargs funcbody •

    $default  reduce using rule 46 (funcdef)


State 139

   15 expr: expr • PLUS expr
   16     | expr • MINUS expr
   17     | expr • MULTIPLY expr
   18     | expr • DIVIDE expr
   19     | expr • MODULUS expr
   20     | expr • LESS_THAN expr
   21     | expr • GREATER_THAN expr
   22     | expr • LESS_THAN_OR_EQUAL expr
   23     | expr • GREATER_THAN_OR_EQUAL expr
   24     | expr • EQUAL expr
   25     | expr • NOT_EQUAL expr
   26     | expr • AND expr
   27     | expr • OR expr
   29 assignexpr: lvalue ASSIGNMENT expr •

    AND                    shift, and go to state 73
    OR                     shift, and go to state 74
    PLUS                   shift, and go to state 75
    MINUS                  shift, and go to state 76
    MULTIPLY               shift, and go to state 77
    DIVIDE                 shift, and go to state 78
    MODULUS                shift, and go to state 79
    LESS_THAN              shift, and go to state 80
    GREATER_THAN           shift, and go to state 81
    LESS_THAN_OR_EQUAL     shift, and go to state 82
    GREATER_THAN_OR_EQUAL  shift, and go to state 83
    EQUAL                  shift, and go to state 84
    NOT_EQUAL              shift, and go to state 85

    $default  reduce using rule 29 (assignexpr)


State 140

   62 member: lvalue PERIOD ID •

    $default  reduce using rule 62 (member)


State 141

   15 expr: expr • PLUS expr
   16     | expr • MINUS expr
   17     | expr • MULTIPLY expr
   18     | expr • DIVIDE expr
   19     | expr • MODULUS expr
   20     | expr • LESS_THAN expr
   21     | expr • GREATER_THAN expr
   22     | expr • LESS_THAN_OR_EQUAL expr
   23     | expr • GREATER_THAN_OR_EQUAL expr
   24     | expr • EQUAL expr
   25     | expr • NOT_EQUAL expr
   26     | expr • AND expr
   27     | expr • OR expr
   63 member: lvalue LEFT_BRACKET expr • RIGHT_BRACKET

    AND                    shift, and go to state 73
    OR                     shift, and go to state 74
    PLUS                   shift, and go to state 75
    MINUS                  shift, and go to state 76
    MULTIPLY               shift, and go to state 77
    DIVIDE                 shift, and go to state 78
    MODULUS                shift, and go to state 79
    LESS_THAN              shift, and go to state 80
    GREATER_THAN           shift, and go to state 81
    LESS_THAN_OR_EQUAL     shift, and go to state 82
    GREATER_THAN_OR_EQUAL  shift, and go to state 83
    EQUAL                  shift, and go to state 84
    NOT_EQUAL              shift, and go to state 85
    RIGHT_BRACKET          shift, and go to state 163


State 142

   87 normcall: LEFT_PARENTHESIS elist • RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 164


State 143

   88 methodcall: DOUBLE_PERIOD ID • LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 165


State 144

   64 member: call PERIOD ID •

    $default  reduce using rule 64 (member)


State 145

   15 expr: expr • PLUS expr
   16     | expr • MINUS expr
   17     | expr • MULTIPLY expr
   18     | expr • DIVIDE expr
   19     | expr • MODULUS expr
   20     | expr • LESS_THAN expr
   21     | expr • GREATER_THAN expr
   22     | expr • LESS_THAN_OR_EQUAL expr
   23     | expr • GREATER_THAN_OR_EQUAL expr
   24     | expr • EQUAL expr
   25     | expr • NOT_EQUAL expr
   26     | expr • AND expr
   27     | expr • OR expr
   65 member: call LEFT_BRACKET expr • RIGHT_BRACKET

    AND                    shift, and go to state 73
    OR                     shift, and go to state 74
    PLUS                   shift, and go to state 75
    MINUS                  shift, and go to state 76
    MULTIPLY               shift, and go to state 77
    DIVIDE                 shift, and go to state 78
    MODULUS                shift, and go to state 79
    LESS_THAN              shift, and go to state 80
    GREATER_THAN           shift, and go to state 81
    LESS_THAN_OR_EQUAL     shift, and go to state 82
    GREATER_THAN_OR_EQUAL  shift, and go to state 83
    EQUAL                  shift, and go to state 84
    NOT_EQUAL              shift, and go to state 85
    RIGHT_BRACKET          shift, and go to state 166


State 146

   82 call: call LEFT_PARENTHESIS elist • RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 167


State 147

   90 elseprefix: ELSE •

    $default  reduce using rule 90 (elseprefix)


State 148

   92 ifstmt: ifprefix stmt elseprefix • stmt

    IF                  shift, and go to state 4
    WHILE               shift, and go to state 5
    FOR                 shift, and go to state 6
    FUNCTION            shift, and go to state 7
    RETURN              shift, and go to state 8
    BREAK               shift, and go to state 9
    CONTINUE            shift, and go to state 10
    NOT                 shift, and go to state 11
    LOCAL               shift, and go to state 12
    TRUE                shift, and go to state 13
    FALSE               shift, and go to state 14
    NIL                 shift, and go to state 15
    MINUS               shift, and go to state 16
    INCREMENT           shift, and go to state 17
    DECREMENT           shift, and go to state 18
    LEFT_CURLY_BRACKET  shift, and go to state 19
    SEMICOLON           shift, and go to state 20
    LEFT_BRACKET        shift, and go to state 21
    LEFT_PARENTHESIS    shift, and go to state 22
    DOUBLE_COLON        shift, and go to state 23
    ID                  shift, and go to state 24
    INTEGER             shift, and go to state 25
    STRING              shift, and go to state 26
    REAL                shift, and go to state 27

    stmt        go to state 168
    expr        go to state 29
    assignexpr  go to state 30
    term        go to state 31
    block       go to state 32
    funcprefix  go to state 33
    funcdef     go to state 34
    primary     go to state 35
    lvalue      go to state 36
    member      go to state 37
    objectdef   go to state 38
    const       go to state 39
    call        go to state 40
    ifprefix    go to state 41
    ifstmt      go to state 42
    returnstmt  go to state 43
    forprefix   go to state 44
    forstmt     go to state 45
    whilestart  go to state 46
    whilestmt   go to state 47
    break       go to state 48
    continue    go to state 49


State 149

   99 forstmt: forprefix N elist • RIGHT_PARENTHESIS N loopstmt N

    RIGHT_PARENTHESIS  shift, and go to state 169


State 150

   15 expr: expr • PLUS expr
   16     | expr • MINUS expr
   17     | expr • MULTIPLY expr
   18     | expr • DIVIDE expr
   19     | expr • MODULUS expr
   20     | expr • LESS_THAN expr
   21     | expr • GREATER_THAN expr
   22     | expr • LESS_THAN_OR_EQUAL expr
   23     | expr • GREATER_THAN_OR_EQUAL expr
   24     | expr • EQUAL expr
   25     | expr • NOT_EQUAL expr
   26     | expr • AND expr
   27     | expr • OR expr
  101 whilecond: LEFT_PARENTHESIS expr • RIGHT_PARENTHESIS

    AND                    shift, and go to state 73
    OR                     shift, and go to state 74
    PLUS                   shift, and go to state 75
    MINUS                  shift, and go to state 76
    MULTIPLY               shift, and go to state 77
    DIVIDE                 shift, and go to state 78
    MODULUS                shift, and go to state 79
    LESS_THAN              shift, and go to state 80
    GREATER_THAN           shift, and go to state 81
    LESS_THAN_OR_EQUAL     shift, and go to state 82
    GREATER_THAN_OR_EQUAL  shift, and go to state 83
    EQUAL                  shift, and go to state 84
    NOT_EQUAL              shift, and go to state 85
    RIGHT_PARENTHESIS      shift, and go to state 170


State 151

  105 loopstmt: loopstart • stmt loopend

    IF                  shift, and go to state 4
    WHILE               shift, and go to state 5
    FOR                 shift, and go to state 6
    FUNCTION            shift, and go to state 7
    RETURN              shift, and go to state 8
    BREAK               shift, and go to state 9
    CONTINUE            shift, and go to state 10
    NOT                 shift, and go to state 11
    LOCAL               shift, and go to state 12
    TRUE                shift, and go to state 13
    FALSE               shift, and go to state 14
    NIL                 shift, and go to state 15
    MINUS               shift, and go to state 16
    INCREMENT           shift, and go to state 17
    DECREMENT           shift, and go to state 18
    LEFT_CURLY_BRACKET  shift, and go to state 19
    SEMICOLON           shift, and go to state 20
    LEFT_BRACKET        shift, and go to state 21
    LEFT_PARENTHESIS    shift, and go to state 22
    DOUBLE_COLON        shift, and go to state 23
    ID                  shift, and go to state 24
    INTEGER             shift, and go to state 25
    STRING              shift, and go to state 26
    REAL                shift, and go to state 27

    stmt        go to state 171
    expr        go to state 29
    assignexpr  go to state 30
    term        go to state 31
    block       go to state 32
    funcprefix  go to state 33
    funcdef     go to state 34
    primary     go to state 35
    lvalue      go to state 36
    member      go to state 37
    objectdef   go to state 38
    const       go to state 39
    call        go to state 40
    ifprefix    go to state 41
    ifstmt      go to state 42
    returnstmt  go to state 43
    forprefix   go to state 44
    forstmt     go to state 45
    whilestart  go to state 46
    whilestmt   go to state 47
    break       go to state 48
    continue    go to state 49


State 152

  102 whilestmt: whilestart whilecond loopstmt •

    $default  reduce using rule 102 (whilestmt)


State 153

   89 ifprefix: IF LEFT_PARENTHESIS expr RIGHT_PARENTHESIS •

    $default  reduce using rule 89 (ifprefix)


State 154

   98 forprefix: FOR $@5 LEFT_PARENTHESIS elist • SEMICOLON M expr SEMICOLON

    SEMICOLON  shift, and go to state 172


State 155

   84 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS • LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 160


State 156

   39 block: LEFT_CURLY_BRACKET $@1 statements RIGHT_CURLY_BRACKET •

    $default  reduce using rule 39 (block)


State 157

   71 indexedelem: LEFT_CURLY_BRACKET expr COLON • expr RIGHT_CURLY_BRACKET

    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    MINUS             shift, and go to state 16
    INCREMENT         shift, and go to state 17
    DECREMENT         shift, and go to state 18
    LEFT_BRACKET      shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 23
    ID                shift, and go to state 24
    INTEGER           shift, and go to state 25
    STRING            shift, and go to state 26
    REAL              shift, and go to state 27

    expr        go to state 173
    assignexpr  go to state 30
    term        go to state 31
    primary     go to state 35
    lvalue      go to state 36
    member      go to state 37
    objectdef   go to state 38
    const       go to state 39
    call        go to state 40


State 158

   15 expr: expr • PLUS expr
   16     | expr • MINUS expr
   17     | expr • MULTIPLY expr
   18     | expr • DIVIDE expr
   19     | expr • MODULUS expr
   20     | expr • LESS_THAN expr
   21     | expr • GREATER_THAN expr
   22     | expr • LESS_THAN_OR_EQUAL expr
   23     | expr • GREATER_THAN_OR_EQUAL expr
   24     | expr • EQUAL expr
   25     | expr • NOT_EQUAL expr
   26     | expr • AND expr
   27     | expr • OR expr
   74 next: COMMA expr • next

    AND                    shift, and go to state 73
    OR                     shift, and go to state 74
    PLUS                   shift, and go to state 75
    MINUS                  shift, and go to state 76
    MULTIPLY               shift, and go to state 77
    DIVIDE                 shift, and go to state 78
    MODULUS                shift, and go to state 79
    LESS_THAN              shift, and go to state 80
    GREATER_THAN           shift, and go to state 81
    LESS_THAN_OR_EQUAL     shift, and go to state 82
    GREATER_THAN_OR_EQUAL  shift, and go to state 83
    EQUAL                  shift, and go to state 84
    NOT_EQUAL              shift, and go to state 85
    COMMA                  shift, and go to state 114

    $default  reduce using rule 75 (next)

    next  go to state 174


State 159

   69 nextindexelem: COMMA indexedelem • nextindexelem

    COMMA  shift, and go to state 117

    $default  reduce using rule 70 (nextindexelem)

    nextindexelem  go to state 175


State 160

   84 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS • elist RIGHT_PARENTHESIS

    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    MINUS             shift, and go to state 16
    INCREMENT         shift, and go to state 17
    DECREMENT         shift, and go to state 18
    LEFT_BRACKET      shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 23
    ID                shift, and go to state 24
    INTEGER           shift, and go to state 25
    STRING            shift, and go to state 26
    REAL              shift, and go to state 27

    $default  reduce using rule 73 (elist)

    expr        go to state 66
    assignexpr  go to state 30
    term        go to state 31
    primary     go to state 35
    lvalue      go to state 36
    member      go to state 37
    objectdef   go to state 38
    elist       go to state 176
    const       go to state 39
    call        go to state 40


State 161

   48 idlist: ID $@3 • nextID

    COMMA  shift, and go to state 177

    $default  reduce using rule 52 (nextID)

    nextID  go to state 178


State 162

   44 funcargs: LEFT_PARENTHESIS idlist RIGHT_PARENTHESIS •

    $default  reduce using rule 44 (funcargs)


State 163

   63 member: lvalue LEFT_BRACKET expr RIGHT_BRACKET •

    $default  reduce using rule 63 (member)


State 164

   87 normcall: LEFT_PARENTHESIS elist RIGHT_PARENTHESIS •

    $default  reduce using rule 87 (normcall)


State 165

   88 methodcall: DOUBLE_PERIOD ID LEFT_PARENTHESIS • elist RIGHT_PARENTHESIS

    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    MINUS             shift, and go to state 16
    INCREMENT         shift, and go to state 17
    DECREMENT         shift, and go to state 18
    LEFT_BRACKET      shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 23
    ID                shift, and go to state 24
    INTEGER           shift, and go to state 25
    STRING            shift, and go to state 26
    REAL              shift, and go to state 27

    $default  reduce using rule 73 (elist)

    expr        go to state 66
    assignexpr  go to state 30
    term        go to state 31
    primary     go to state 35
    lvalue      go to state 36
    member      go to state 37
    objectdef   go to state 38
    elist       go to state 179
    const       go to state 39
    call        go to state 40


State 166

   65 member: call LEFT_BRACKET expr RIGHT_BRACKET •

    $default  reduce using rule 65 (member)


State 167

   82 call: call LEFT_PARENTHESIS elist RIGHT_PARENTHESIS •

    $default  reduce using rule 82 (call)


State 168

   92 ifstmt: ifprefix stmt elseprefix stmt •

    $default  reduce using rule 92 (ifstmt)


State 169

   99 forstmt: forprefix N elist RIGHT_PARENTHESIS • N loopstmt N

    $default  reduce using rule 95 (N)

    N  go to state 180


State 170

  101 whilecond: LEFT_PARENTHESIS expr RIGHT_PARENTHESIS •

    $default  reduce using rule 101 (whilecond)


State 171

  105 loopstmt: loopstart stmt • loopend

    $default  reduce using rule 104 (loopend)

    loopend  go to state 181


State 172

   98 forprefix: FOR $@5 LEFT_PARENTHESIS elist SEMICOLON • M expr SEMICOLON

    $default  reduce using rule 96 (M)

    M  go to state 182


State 173

   15 expr: expr • PLUS expr
   16     | expr • MINUS expr
   17     | expr • MULTIPLY expr
   18     | expr • DIVIDE expr
   19     | expr • MODULUS expr
   20     | expr • LESS_THAN expr
   21     | expr • GREATER_THAN expr
   22     | expr • LESS_THAN_OR_EQUAL expr
   23     | expr • GREATER_THAN_OR_EQUAL expr
   24     | expr • EQUAL expr
   25     | expr • NOT_EQUAL expr
   26     | expr • AND expr
   27     | expr • OR expr
   71 indexedelem: LEFT_CURLY_BRACKET expr COLON expr • RIGHT_CURLY_BRACKET

    AND                    shift, and go to state 73
    OR                     shift, and go to state 74
    PLUS                   shift, and go to state 75
    MINUS                  shift, and go to state 76
    MULTIPLY               shift, and go to state 77
    DIVIDE                 shift, and go to state 78
    MODULUS                shift, and go to state 79
    LESS_THAN              shift, and go to state 80
    GREATER_THAN           shift, and go to state 81
    LESS_THAN_OR_EQUAL     shift, and go to state 82
    GREATER_THAN_OR_EQUAL  shift, and go to state 83
    EQUAL                  shift, and go to state 84
    NOT_EQUAL              shift, and go to state 85
    RIGHT_CURLY_BRACKET    shift, and go to state 183


State 174

   74 next: COMMA expr next •

    $default  reduce using rule 74 (next)


State 175

   69 nextindexelem: COMMA indexedelem nextindexelem •

    $default  reduce using rule 69 (nextindexelem)


State 176

   84 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist • RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 184


State 177

   51 nextID: COMMA • ID $@4 nextID

    ID  shift, and go to state 185


State 178

   48 idlist: ID $@3 nextID •

    $default  reduce using rule 48 (idlist)


State 179

   88 methodcall: DOUBLE_PERIOD ID LEFT_PARENTHESIS elist • RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 186


State 180

   99 forstmt: forprefix N elist RIGHT_PARENTHESIS N • loopstmt N

    $default  reduce using rule 103 (loopstart)

    loopstart  go to state 151
    loopstmt   go to state 187


State 181

  105 loopstmt: loopstart stmt loopend •

    $default  reduce using rule 105 (loopstmt)


State 182

   98 forprefix: FOR $@5 LEFT_PARENTHESIS elist SEMICOLON M • expr SEMICOLON

    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    MINUS             shift, and go to state 16
    INCREMENT         shift, and go to state 17
    DECREMENT         shift, and go to state 18
    LEFT_BRACKET      shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 23
    ID                shift, and go to state 24
    INTEGER           shift, and go to state 25
    STRING            shift, and go to state 26
    REAL              shift, and go to state 27

    expr        go to state 188
    assignexpr  go to state 30
    term        go to state 31
    primary     go to state 35
    lvalue      go to state 36
    member      go to state 37
    objectdef   go to state 38
    const       go to state 39
    call        go to state 40


State 183

   71 indexedelem: LEFT_CURLY_BRACKET expr COLON expr RIGHT_CURLY_BRACKET •

    $default  reduce using rule 71 (indexedelem)


State 184

   84 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS •

    $default  reduce using rule 84 (call)


State 185

   51 nextID: COMMA ID • $@4 nextID

    $default  reduce using rule 50 ($@4)

    $@4  go to state 189


State 186

   88 methodcall: DOUBLE_PERIOD ID LEFT_PARENTHESIS elist RIGHT_PARENTHESIS •

    $default  reduce using rule 88 (methodcall)


State 187

   99 forstmt: forprefix N elist RIGHT_PARENTHESIS N loopstmt • N

    $default  reduce using rule 95 (N)

    N  go to state 190


State 188

   15 expr: expr • PLUS expr
   16     | expr • MINUS expr
   17     | expr • MULTIPLY expr
   18     | expr • DIVIDE expr
   19     | expr • MODULUS expr
   20     | expr • LESS_THAN expr
   21     | expr • GREATER_THAN expr
   22     | expr • LESS_THAN_OR_EQUAL expr
   23     | expr • GREATER_THAN_OR_EQUAL expr
   24     | expr • EQUAL expr
   25     | expr • NOT_EQUAL expr
   26     | expr • AND expr
   27     | expr • OR expr
   98 forprefix: FOR $@5 LEFT_PARENTHESIS elist SEMICOLON M expr • SEMICOLON

    AND                    shift, and go to state 73
    OR                     shift, and go to state 74
    PLUS                   shift, and go to state 75
    MINUS                  shift, and go to state 76
    MULTIPLY               shift, and go to state 77
    DIVIDE                 shift, and go to state 78
    MODULUS                shift, and go to state 79
    LESS_THAN              shift, and go to state 80
    GREATER_THAN           shift, and go to state 81
    LESS_THAN_OR_EQUAL     shift, and go to state 82
    GREATER_THAN_OR_EQUAL  shift, and go to state 83
    EQUAL                  shift, and go to state 84
    NOT_EQUAL              shift, and go to state 85
    SEMICOLON              shift, and go to state 191


State 189

   51 nextID: COMMA ID $@4 • nextID

    COMMA  shift, and go to state 177

    $default  reduce using rule 52 (nextID)

    nextID  go to state 192


State 190

   99 forstmt: forprefix N elist RIGHT_PARENTHESIS N loopstmt N •

    $default  reduce using rule 99 (forstmt)


State 191

   98 forprefix: FOR $@5 LEFT_PARENTHESIS elist SEMICOLON M expr SEMICOLON •

    $default  reduce using rule 98 (forprefix)


State 192

   51 nextID: COMMA ID $@4 nextID •

    $default  reduce using rule 51 (nextID)
